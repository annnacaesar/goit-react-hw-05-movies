{"version":3,"file":"static/js/321.be6e9046.chunk.js","mappings":"6MAUaA,GAPQC,EAAAA,GAAAA,GAAH,gHAOEA,EAAAA,GAAAA,GAAH,oIASJC,GAAOD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,kO,mBCIjB,EApB0B,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACtBC,GAAWC,EAAAA,EAAAA,MAEjB,OACC,SAACN,EAAD,UACEI,GACAA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,IAAKC,EAAZ,EAAYA,MAAZ,OACV,UAACR,EAAD,CACCS,GAAE,kBAAaH,GAEfI,MAAO,CAAEC,KAAMR,GAHhB,WAKC,gBAAKS,IAAKL,EAAKM,IAAKL,KACpB,wBAAKA,MAJAF,U,+ICVEQ,EAAkBf,EAAAA,GAAAA,KAAH,6IAQfgB,EAAQhB,EAAAA,GAAAA,MAAH,kVAmBLiB,EAASjB,EAAAA,GAAAA,OAAH,wH,gDC4DnB,EAlFqB,WACpB,OAAsCkB,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAekB,EAAf,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KAeAC,QAAQC,IAAIH,GACZ,IAAMI,EAAeJ,EAAaK,IAAI,SAuCtC,OAtCAH,QAAQC,IAAIC,IAEZE,EAAAA,EAAAA,YAAU,WACJF,GACJF,QAAQC,IAAI,UAEX,CAACC,KAEJE,EAAAA,EAAAA,YAAU,WACT,GAAoB,KAAhBZ,EAAoB,CACvB,IAAMa,EAAgB,mCAAG,8GAEAC,EAAAA,EAAAA,IAAoBd,GAFpB,OAEjBe,EAFiB,OAGvBP,QAAQC,IAAIM,GACZb,EAAUa,GAJa,gDAMvBX,EAAS,KAAMY,SACfR,QAAQC,IAAI,KAAMO,SAPK,yDAAH,qDAUtBH,SACM,GAAIH,EAAc,CACxB,IAAMG,EAAgB,mCAAG,8GAEAC,EAAAA,EAAAA,IAAoBJ,GAFpB,OAEjBK,EAFiB,OAGvBP,QAAQC,IAAIM,GACZb,EAAUa,GAJa,gDAMvBX,EAAS,KAAMY,SACfR,QAAQC,IAAI,KAAMO,SAPK,yDAAH,qDAUtBH,OAIC,CAACb,EAAaU,KAGhB,iCACC,UAACd,EAAD,CAAiBqB,SAvDE,SAAAC,GACpBA,EAAEC,iBAEFlB,EACCiB,EAAEE,cAAcC,SAASrB,YAAYsB,MAAMC,cAAcC,QAE1DjB,EAAgB,CACfkB,MAAOP,EAAEE,cAAcC,SAASrB,YAAYsB,MAC1CC,cACAC,UA8CF,WACC,SAAC3B,EAAD,CACC6B,KAAK,cACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eAEb,SAAChC,EAAD,CAAQ6B,KAAK,SAAb,UACC,SAAC,MAAD,CAAuBI,KAAK,KAAKC,MAAM,cAGvC7B,GAGD,kDAA0BH,EAA1B,QAFA,SAACiC,EAAA,EAAD,CAAYjD,OAAQA","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h2`\n\tmargin-bottom: 30px;\n\tmargin-top: 30px;\n\tfont-size: 36px;\n\ttext-align: center;\n`;\n\nexport const List = styled.ul`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tlist-style: none;\n\tmargin: 0;\n\tpadding: 0;\n\tgap: 15px 15px;\n`;\n\nexport const Item = styled(Link)`\n\twidth: 100%;\n\tflex-basis: calc(100% / 5 - 15px);\n\tpadding: 5px;\n\tcolor: var(--font-colo);\n\tbackground: #fbf9fa3f;\n\tfont-size: 18px;\n\tborder-radius: 5px;\n\t& img {\n\t\twidth: 100%;\n\t}\n`;\n","import { List, Item } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n\tconst location = useLocation();\n\n\treturn (\n\t\t<List>\n\t\t\t{movies &&\n\t\t\t\tmovies.map(({ id, img, title }) => (\n\t\t\t\t\t<Item\n\t\t\t\t\t\tto={`/movies/${id}`}\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\tstate={{ from: location }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img src={img} alt={title} />\n\t\t\t\t\t\t<h3>{title}</h3>\n\t\t\t\t\t</Item>\n\t\t\t\t))}\n\t\t</List>\n\t);\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const SearchContainer = styled.form`\n\tpadding-top: 30px;\n\tpadding-bottom: 30px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const Input = styled.input`\n\tmargin: 0;\n\tpadding: 10px;\n\tmin-width: 300px;\n\theight: 40px;\n\tbackground-color: #fbf9fa3f;\n\tcolor: var(--font-color);\n\tfont-size: 20px;\n\tborder-radius: 5px 0 0 5px;\n\t&:active,\n\t&:focus {\n\t\toutline: 1px solid var(--font-color);\n\t}\n\n\t&::placeholder {\n\t\tcolor: var(--font-color);\n\t}\n`;\n\nexport const Button = styled.button`\n\theight: 40px;\n\twidth: 40px;\n\tbackground-color: #fbf9fa3f;\n\tborder-radius: 0 5px 5px 0;\n`;\n","import { HiOutlineSearchCircle } from 'react-icons/hi';\nimport { Input, Button, SearchContainer } from './Movies.styled';\nimport { useState, useEffect } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { fetchMoviesBySearch } from '../../services/api-service';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesSearch = () => {\n\tconst [searchQuery, setSearchQuery] = useState('');\n\tconst [movies, setMovies] = useState([]);\n\tconst [error, setError] = useState(null);\n\tconst [searchParams, setSearchParams] = useSearchParams({});\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tsetSearchQuery(\n\t\t\te.currentTarget.elements.searchQuery.value.toLowerCase().trim()\n\t\t);\n\t\tsetSearchParams({\n\t\t\tquery: e.currentTarget.elements.searchQuery.value\n\t\t\t\t.toLowerCase()\n\t\t\t\t.trim(),\n\t\t});\n\t};\n\n\tconsole.log(searchParams);\n\tconst currentQuery = searchParams.get('query');\n\tconsole.log(currentQuery);\n\n\tuseEffect(() => {\n\t\tif (!currentQuery) {\n\t\t\tconsole.log('nety');\n\t\t}\n\t}, [currentQuery]);\n\n\tuseEffect(() => {\n\t\tif (searchQuery !== '') {\n\t\t\tconst getMovieBySearch = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetchMoviesBySearch(searchQuery);\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t\tsetMovies(response);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsetError(error.message);\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\t\t\tgetMovieBySearch();\n\t\t} else if (currentQuery) {\n\t\t\tconst getMovieBySearch = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetchMoviesBySearch(currentQuery);\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t\tsetMovies(response);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsetError(error.message);\n\t\t\t\t\tconsole.log(error.message);\n\t\t\t\t}\n\t\t\t};\n\t\t\tgetMovieBySearch();\n\t\t}\n\n\t\treturn;\n\t}, [searchQuery, currentQuery]);\n\n\treturn (\n\t\t<>\n\t\t\t<SearchContainer onSubmit={handleSubmit}>\n\t\t\t\t<Input\n\t\t\t\t\tname=\"searchQuery\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tautoFocus\n\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t/>\n\t\t\t\t<Button type=\"submit\">\n\t\t\t\t\t<HiOutlineSearchCircle size=\"35\" color=\"#fff\" />\n\t\t\t\t</Button>\n\t\t\t</SearchContainer>\n\t\t\t{!error ? (\n\t\t\t\t<MoviesList movies={movies} />\n\t\t\t) : (\n\t\t\t\t<p>No results found for '{searchQuery}'</p>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default MoviesSearch;\n"],"names":["List","styled","Item","Link","movies","location","useLocation","map","id","img","title","to","state","from","src","alt","SearchContainer","Input","Button","useState","searchQuery","setSearchQuery","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","console","log","currentQuery","get","useEffect","getMovieBySearch","fetchMoviesBySearch","response","message","onSubmit","e","preventDefault","currentTarget","elements","value","toLowerCase","trim","query","name","type","autoComplete","autoFocus","placeholder","size","color","MoviesList"],"sourceRoot":""}