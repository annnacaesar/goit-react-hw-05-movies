{"version":3,"file":"static/js/104.c5e675f1.chunk.js","mappings":"yPAEaA,EAAYC,EAAAA,GAAAA,IAAH,0CAITC,EAAWD,EAAAA,GAAAA,GAAH,yGAMRE,EAAWF,EAAAA,GAAAA,GAAH,6SAiBRG,EAAOH,EAAAA,GAAAA,EAAH,sF,gDCmBjB,EA1Ca,WACZ,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAO,mCAAG,8GAESC,EAAAA,EAAAA,IAAmBC,OAAOL,IAFnC,OAERM,EAFQ,OAGdC,QAAQC,IAAIF,GACZP,EAAWO,GAJG,gDAMdC,QAAQC,IAAI,KAAMC,SANJ,yDAAH,qDASbN,MACE,CAACH,KAGH,SAACR,EAAD,UACqB,IAAnBM,EAAQY,QACR,SAAChB,EAAD,UACEI,GACAA,EAAQa,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GACvCC,GAAMC,EAAAA,EAAAA,IAAWJ,GACvB,OACC,UAAClB,EAAD,YACC,gBAAKuB,IAAKF,EAAKG,IAAKP,KACpB,SAAChB,EAAD,UAAOgB,KACP,UAAChB,EAAD,yBAAkBkB,EAAlB,SAHcC,SASnB,SAACnB,EAAD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n\tpadding: 20px;\n`;\n\nexport const ListCost = styled.ul`\n\tdisplay: flex;\n\talign-items: center;\n\tflex-wrap: wrap;\n\tgap: 30px 15px;\n`;\nexport const ItemCost = styled.li`\n\twidth: 100%;\n\theight: 400px;\n\tflex-basis: calc(100% / 4 - 15px);\n\tpadding: 5px;\n\tcolor: var(--font-color);\n\tbackground: #fbf9fa3f;\n\t/* font-size: 16px; */\n\tborder-radius: 5px;\n\n\t& img {\n\t\twidth: 100%;\n\t\tmax-height: 300px;\n\t\tobject-fit: cover;\n\t}\n`;\n\nexport const Data = styled.p`\n\tmargin-top: 10px;\n\tfont-size: 14px;\n\tfont-weight: 600;\n`;\n","import { ListCost, Container, ItemCost, Data } from './Cast.styled';\nimport { useState, useEffect } from 'react';\nimport { getImgPath } from '../../helpers/normalization-obj';\nimport { useParams } from 'react-router';\nimport { fetchMoviesCredits } from '../../services/api-service';\n\nconst Cast = () => {\n\tconst [credits, setCredits] = useState([]);\n\tconst { movieId } = useParams();\n\n\tuseEffect(() => {\n\t\tconst getCast = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetchMoviesCredits(Number(movieId));\n\t\t\t\tconsole.log(response);\n\t\t\t\tsetCredits(response);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error.message);\n\t\t\t}\n\t\t};\n\t\tgetCast();\n\t}, [movieId]);\n\n\treturn (\n\t\t<Container>\n\t\t\t{credits.length !== 0 ? (\n\t\t\t\t<ListCost>\n\t\t\t\t\t{credits &&\n\t\t\t\t\t\tcredits.map(({ name, profile_path, character, id }) => {\n\t\t\t\t\t\t\tconst img = getImgPath(profile_path);\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ItemCost key={id}>\n\t\t\t\t\t\t\t\t\t<img src={img} alt={name} />\n\t\t\t\t\t\t\t\t\t<Data>{name}</Data>\n\t\t\t\t\t\t\t\t\t<Data>Character: {character} </Data>\n\t\t\t\t\t\t\t\t</ItemCost>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t</ListCost>\n\t\t\t) : (\n\t\t\t\t<Data>\n\t\t\t\t\tWe have no information about the actors of this movie\n\t\t\t\t</Data>\n\t\t\t)}\n\t\t</Container>\n\t);\n};\n\nexport default Cast;\n"],"names":["Container","styled","ListCost","ItemCost","Data","useState","credits","setCredits","movieId","useParams","useEffect","getCast","fetchMoviesCredits","Number","response","console","log","message","length","map","name","profile_path","character","id","img","getImgPath","src","alt"],"sourceRoot":""}