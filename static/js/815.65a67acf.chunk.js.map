{"version":3,"file":"static/js/815.65a67acf.chunk.js","mappings":"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","sources":["helpers/genreList.js","helpers/normalization-obj.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api-service.jsx"],"sourcesContent":["export const obj = {\n  28: \"Action\",\n  12: \"Adventure\",\n  16: \"Animation\",\n  35: \"Comedy\",\n  80: \"Crime\",\n  99: \"Documentary\",\n  18: \"Drama\",\n  10751: \"Family\",\n  14: \"Fantasy\",\n  36: \"History\",\n  27: \"Horror\",\n  10402: \"Music\",\n  9648: \"Mystery\",\n  10749: \"Romance\",\n  878: \"Science Fiction\",\n  10770: \"TV Movie\",\n  53: \"Thriller\",\n  10752: \"War\",\n  37: \"Western\",\n};\n\nexport default obj;","import genreList from './genreList';\nimport noImg from '../images/No_image_available.png';\n\nconst getGenreArray = genre_ids =>\n\tgenre_ids.map(el => genreList[`${el}`]).join(', ');\nconst getGenreArrayLibrary = genres => genres.map(el => el.name).join(', ');\n\nexport const getImgPath = imgPath =>\n\t!imgPath ? `${noImg}` : `https://image.tmdb.org/t/p/w500/${imgPath}`;\n\nconst getDate = date => (!date ? date : date.slice(0, 4));\n\nexport const normalizeMovies = movies => {\n\treturn movies.map(\n\t\t({\n\t\t\tgenres = null,\n\t\t\tgenre_ids = null,\n\t\t\tid,\n\t\t\toriginal_title,\n\t\t\tname,\n\t\t\toverview,\n\t\t\tpopularity,\n\t\t\tposter_path,\n\t\t\trelease_date,\n\t\t\tvote_average,\n\t\t\tvote_count,\n\t\t}) => ({\n\t\t\tgenre: genre_ids\n\t\t\t\t? getGenreArray(genre_ids)\n\t\t\t\t: getGenreArrayLibrary(genres),\n\t\t\tid: id,\n\t\t\ttitle: original_title ? original_title : name,\n\t\t\tabout: overview,\n\t\t\tpopularity: popularity,\n\t\t\timg: getImgPath(poster_path),\n\t\t\treleaseDate: release_date ? getDate(release_date) : '',\n\t\t\tvote: vote_average,\n\t\t\tvotes: vote_count,\n\t\t})\n\t);\n};\n\nexport const normalizeMoviesDetails = ({\n\tposter_path,\n\ttitle,\n\toriginal_title,\n\tvote_average,\n\toverview,\n\tgenres,\n\trelease_date,\n}) => {\n\treturn {\n\t\tgenre: getGenreArrayLibrary(genres),\n\t\ttitle: original_title ? original_title : title,\n\t\tabout: overview,\n\t\timg: getImgPath(poster_path),\n\t\treleaseDate: release_date ? getDate(release_date) : '',\n\t\tvote: vote_average,\n\t};\n};\n\n// adult: false\n// backdrop_path: \"/27Mj3rFYP3xqFy7lnz17vEd8Ms.jpg\"\n// belongs_to_collection: {id: 1005134, name: 'The Gray Man Collection', poster_path: null, backdrop_path: null}\n// budget: 200000000\n// genres: (2) [{…}, {…}]\n// homepage: \"https://www.netflix.com/title/81160697\"\n// id: 725201\n// imdb_id: \"tt1649418\"\n// original_language: \"en\"\n// original_title: \"The Gray Man\"\n// overview: \"When a shadowy CIA agent uncovers damning agency secrets, he's hunted across the globe by a sociopathic rogue operative who's put a bounty on his head.\"\n// popularity: 3842.08\n// poster_path: \"/8cXbitsS6dWQ5gfMTZdorpAAzEH.jpg\"\n// production_companies: (3) [{…}, {…}, {…}]\n// production_countries: (2) [{…}, {…}]\n// release_date: \"2022-07-13\"\n// revenue: 0\n// runtime: 128\n// spoken_languages: (5) [{…}, {…}, {…}, {…}, {…}]\n// status: \"Released\"\n// tagline: \"\"\n// title: \"The Gray Man\"\n// video: false\n// vote_average: 7.011\n// vote_count: 1040\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const CardContainer = styled.div`\n\tdisplay: flex;\n\tpadding: 10px 20px 20px;\n\n\tborder-bottom: var(--border);\n`;\nexport const ImageContainer = styled.div`\n\tmargin-right: 35px;\n\tflex-direction: column;\n`;\nexport const Button = styled(NavLink)`\n\tbackground: #fbf9fa3f;\n\tpadding: 10px 20px;\n\tborder-radius: 5px;\n\tfont-size: 18px;\n\n\tcolor: var(--font-color);\n`;\nexport const Image = styled.img`\n\tmargin-top: 15px;\n\tmax-width: 300px;\n\tdisplay: block;\n\tborder-radius: 5px;\n`;\nexport const DataContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-top: 53px;\n`;\nexport const DataTitle = styled.h2`\nfont-size: 30px;\nmargin-bottom: 10px;\n}\n`;\nexport const Description = styled.p`\nfont-size:18px;\n&:not(:last-of-type){\nmargin-bottom: 20px;\n`;\n\nexport const InfoContainer = styled.div`\n\tpadding: 10px 20px 20px;\n\tborder-bottom: var(--border);\n`;\n\nexport const InfoLink = styled(NavLink)`\n\tfont-size: 18px;\n\t&:not(:last-of-type) {\n\t\tmargin-right: 15px;\n\t}\n\t&.active {\n\t\tcolor: var(--hover-link-color);\n\t}\n`;\n","import { useEffect, useState } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport {\n\tCardContainer,\n\tImageContainer,\n\tButton,\n\tImage,\n\tDataContainer,\n\tDataTitle,\n\tDescription,\n\tInfoContainer,\n\tInfoLink,\n} from './MovieDetails.styled';\nimport { fetchMoviesById } from '../../services/api-service';\n\nconst MovieDetails = () => {\n\tconst { movieId } = useParams();\n\tconst [details, setDetails] = useState(null);\n\tconst location = useLocation();\n\n\tuseEffect(() => {\n\t\tconst getMovie = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetchMoviesById(Number(movieId));\n\t\t\t\tconsole.log(response);\n\t\t\t\tsetDetails(response);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error.message);\n\t\t\t}\n\t\t};\n\t\tgetMovie();\n\t}, [movieId]);\n\n\treturn (\n\t\t<>\n\t\t\t{details && (\n\t\t\t\t<CardContainer>\n\t\t\t\t\t<ImageContainer>\n\t\t\t\t\t\t<Button to={location?.state?.from ?? '/'}>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t⇦ Go back\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Image src={details.img} alt={details.title} />\n\t\t\t\t\t</ImageContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<DataTitle>\n\t\t\t\t\t\t\t{details.title} ({details.releaseDate})\n\t\t\t\t\t\t</DataTitle>\n\t\t\t\t\t\t<Description>User score: {details.vote}</Description>\n\t\t\t\t\t\t<DataTitle>Overview</DataTitle>\n\t\t\t\t\t\t<Description>{details.about}</Description>\n\t\t\t\t\t\t<DataTitle>Genres</DataTitle>\n\t\t\t\t\t\t<Description>{details.genre}</Description>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CardContainer>\n\t\t\t)}\n\t\t\t<InfoContainer>\n\t\t\t\t<DataTitle>Additional information</DataTitle>\n\t\t\t\t<ul>\n\t\t\t\t\t<InfoLink to=\"cast\">Cast</InfoLink>\n\t\t\t\t\t<InfoLink to=\"reviews\">Reviews</InfoLink>\n\t\t\t\t</ul>\n\t\t\t</InfoContainer>\n\t\t\t<Outlet />\n\t\t</>\n\t);\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport {\n\tnormalizeMovies,\n\tnormalizeMoviesDetails,\n} from '../helpers/normalization-obj';\n\nconst API_KEY = '7cb8097836a7a1f4e5c19953961668c8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n\tapi_key: API_KEY,\n\tinclude_adult: false,\n\tlanguage: 'en-US',\n};\n\nexport const fetchTrendingMovies = async () => {\n\tconst { data } = await axios.get(`/trending/all/day?`);\n\tconst response = normalizeMovies(data.results);\n\treturn response;\n};\n\nexport const fetchMoviesById = async id => {\n\tconst { data } = await axios.get(`/movie/${id}?`);\n\tconst response = normalizeMoviesDetails(data);\n\treturn response;\n};\n\nexport const fetchMoviesBySearch = async query => {\n\tconst { data } = await axios.get(`/search/movie?query=${query}&page=1`);\n\tconst response = normalizeMovies(data.results);\n\treturn response;\n};\n\nexport const fetchMoviesCredits = async id => {\n\tconst { data } = await axios.get(`/movie/${id}/credits?`);\n\treturn data.cast;\n};\n\nexport const fetchMoviesReviews = async id => {\n\tconst { data } = await axios.get(`/movie/${id}/reviews?`);\n\treturn data.results;\n};\n\n// export default fetchMoviesBySearch;\n\n// adult: false\n// backdrop_path: \"/vsHD4yu6eHTXfYBLyRRiuQIJmJe.jpg\"\n// genre_ids: [35]\n// id: 838330\n// media_type: \"movie\"\n// original_language: \"en\"\n// original_title: \"Not Okay\"\n// overview: \"An ambitious young woman, desperate for followers and fame, fakes a trip to Paris to up her social media presence. When a terrifying incident takes place in the real world and becomes part of her imaginary trip, her white lie becomes a moral quandary that offers her all the attention she’s wanted.\"\n// popularity: 111.892\n// poster_path: \"/x1q3FkqFHBkMeKnHiS6GYgdLvUs.jpg\"\n// release_date: \"2022-07-29\"\n// title: \"Not Okay\"\n// video: false\n// vote_average: 7.1\n// vote_count: 50\n\n// genre:\n//   id:\n//   title:\n//   about:\n//   popularity:\n//   img:\n//   releaseDate:\n//   vote:\n//   votes:\n"],"names":["getGenreArray","genre_ids","map","el","genreList","join","getGenreArrayLibrary","genres","name","getImgPath","imgPath","noImg","getDate","date","slice","normalizeMovies","movies","id","original_title","overview","popularity","poster_path","release_date","vote_average","vote_count","genre","title","about","img","releaseDate","vote","votes","normalizeMoviesDetails","CardContainer","styled","ImageContainer","Button","NavLink","Image","DataContainer","DataTitle","Description","InfoContainer","InfoLink","movieId","useParams","useState","details","setDetails","location","useLocation","useEffect","getMovie","fetchMoviesById","Number","response","console","log","message","to","state","from","src","alt","axios","api_key","include_adult","language","fetchTrendingMovies","data","results","fetchMoviesBySearch","query","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}